#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>

int main()
{
    printf("Лабораторная работа №3 Задание 2.1\n\
Выполнил студент ИСТбд-21 Цыпленков Д. А.\n");
pid_t pid, ppid;
int i, a = 0;
/* При успешном создании нового процесса с этого места
псевдопараллельно начинают работать два процесса: старый и новый */
(void)fork();
/* Узнаем идентификаторы текущего и родительского
процесса (в каждом из процессов !!!) */
pid = getpid();ppid = getppid();
/* Перед выполнением следующего выражения значение переменной a
в обоих процессах равно 0 */
a++;
/* Печатаем значения PID, PPID
и вычисленное значение переменной a(в каждом из процессов !!!) */
    for (i = 0; i < 100; i++, a++)
        printf("a = %d\n", a);
printf("My pid = %d, my ppid = %d,  result = %d\n", (int)pid, (int)ppid, a);
    return 0;
}
//У дочернего процесса меняется:
//Ид процесса
//Ид род процесса
//Время, до получения сигнала SIGALRM - сигнал, посылаемый процессу по истечении времени, предварительно заданного функцией alarm()
//Сигналы ожидавшие доставки род процессу, не будут доставляться порожденному процессу
